alias gh='github'
alias difc='dif --cached'
alias stash='git stash'
alias push='git push'
alias unstage='st -s | cut -c4- | sed "s/ -> /☃/" | tr "☃" "\n" | xargs git reset HEAD'
alias editst='st -s | cut -c4- | xargs mate'
alias base_sha='BRANCH=`git rev-parse --abbrev-ref HEAD` && git merge-base origin/master $BRANCH && unset BRANCH'
alias basesha='base_sha'
alias dif_master='BRANCH=`git rev-parse --abbrev-ref HEAD` && MERGE_BASE=`git merge-base origin/master $BRANCH` && git diff $MERGE_BASE..$BRANCH'
alias diff_master='dif_master'
alias _diff_master_name_only='BRANCH=`git rev-parse --abbrev-ref HEAD` && MERGE_BASE=`git merge-base origin/master $BRANCH` && git diff --name-only $MERGE_BASE..$BRANCH --diff-filter=ACMRTUXB && unset BRANCH MERGE_BASE'
alias _diff_dirty_name_only='git status --porcelain | grep -v "^[[:space:]]*D" | cut -c4- | sed "s/^.* -> //g"'
alias tickle='FILES="`_diff_master_name_only` `_diff_dirty_name_only`" && echo $FILES | sort -u | xargs touch && unset FILES'
alias touchst='tickle'
alias deldone='up && if [[ `git rev-parse --abbrev-ref HEAD` == "master" ]]; then git branch --merged | grep -v "^*" | xargs git branch -d; fi'
alias undolastrev='git reset --soft HEAD~1'
alias rebase='up && git stash && git rebase origin/master && git stash pop'
alias msq='up && git merge origin/master && git reset origin/master'
alias ggc='rm -rf .git/gc.log && git prune && git gc --prune && git fsck'

reset () {
	git reset HEAD "$@"
	git checkout "$@"
}

updatelastrev () {
	message=$(git log -1 --format="medium" | tail -n +5 | cut -c5-)
	git reset --soft HEAD~1 #undolastrev
	git commit -m "$message"
	unset message
}

[[ -r $HOME/.bin/lib/git-completion.bash ]] && source $HOME/.bin/lib/git-completion.bash
[[ -r $HOME/.bin/lib/git-prompt.sh ]] && source $HOME/.bin/lib/git-prompt.sh

export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUPSTREAM='auto'

export PS1='\u $(__git_ps1 "(%s)")\$ '
